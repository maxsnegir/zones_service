// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/http/handlers.go

// Package mock_http is a generated GoMock package.
package mock_http

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	geojson "github.com/maxsnegir/zones_service/internal/domain/geojson"
)

// MockZoneSaver is a mock of ZoneSaver interface.
type MockZoneSaver struct {
	ctrl     *gomock.Controller
	recorder *MockZoneSaverMockRecorder
}

// MockZoneSaverMockRecorder is the mock recorder for MockZoneSaver.
type MockZoneSaverMockRecorder struct {
	mock *MockZoneSaver
}

// NewMockZoneSaver creates a new mock instance.
func NewMockZoneSaver(ctrl *gomock.Controller) *MockZoneSaver {
	mock := &MockZoneSaver{ctrl: ctrl}
	mock.recorder = &MockZoneSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockZoneSaver) EXPECT() *MockZoneSaverMockRecorder {
	return m.recorder
}

// SaveZoneFromFeatureCollection mocks base method.
func (m *MockZoneSaver) SaveZoneFromFeatureCollection(ctx context.Context, featureCollection geojson.FeatureCollection) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveZoneFromFeatureCollection", ctx, featureCollection)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveZoneFromFeatureCollection indicates an expected call of SaveZoneFromFeatureCollection.
func (mr *MockZoneSaverMockRecorder) SaveZoneFromFeatureCollection(ctx, featureCollection interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveZoneFromFeatureCollection", reflect.TypeOf((*MockZoneSaver)(nil).SaveZoneFromFeatureCollection), ctx, featureCollection)
}

// MockZoneProvider is a mock of ZoneProvider interface.
type MockZoneProvider struct {
	ctrl     *gomock.Controller
	recorder *MockZoneProviderMockRecorder
}

// MockZoneProviderMockRecorder is the mock recorder for MockZoneProvider.
type MockZoneProviderMockRecorder struct {
	mock *MockZoneProvider
}

// NewMockZoneProvider creates a new mock instance.
func NewMockZoneProvider(ctrl *gomock.Controller) *MockZoneProvider {
	mock := &MockZoneProvider{ctrl: ctrl}
	mock.recorder = &MockZoneProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockZoneProvider) EXPECT() *MockZoneProviderMockRecorder {
	return m.recorder
}

// GetZonesByIds mocks base method.
func (m *MockZoneProvider) GetZonesByIds(ctx context.Context, ids []int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetZonesByIds", ctx, ids)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetZonesByIds indicates an expected call of GetZonesByIds.
func (mr *MockZoneProviderMockRecorder) GetZonesByIds(ctx, ids interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetZonesByIds", reflect.TypeOf((*MockZoneProvider)(nil).GetZonesByIds), ctx, ids)
}
